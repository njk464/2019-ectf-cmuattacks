#!/usr/bin/env python3.6

import os
import subprocess
import argparse

# The path to output generated files to.
GEN_PATH = "./"

# The name of the boot image generated by bootgen
MESH_BIN_NAME = "MES.bin"


def build_system(bif):
    """Build the system according to the bif file using bootgen. Bootgen is a
    provided petalinux utility and packages the provided images into a boot
    image. For more information about how bootgen builds the image, see page
    55 of the link below.

    https://www.xilinx.com/support/documentation/user_guides/ug821-zynq-7000-swdev.pdf

    bif: The path to the boot image file (.bif) file. This must be valid BIF format
        as specified in the petalinux software development guide.
    """

    print("Building %s" % (MESH_BIN_NAME))

    # build boot binary using bootgen
    subprocess.check_call("/opt/pkg/petalinux/tools/hsm/bin/bootgen -arch zynq -image %s -w -o %s" % (bif, os.path.join(GEN_PATH, MESH_BIN_NAME)), shell=True)

    print("Done building %s" % (MESH_BIN_NAME))


def main():
    parser = argparse.ArgumentParser()
    parser.add_argument('bif', help=("This is the .bif file generated by "
                                     "provisionSystem.py."))
    args = parser.parse_args()

    # verify bif exists
    if not os.path.isfile(args.bif):
        print("Unable to open BIF file : %s" % (args.bif))
        exit(2)

    build_system(args.bif)


if __name__ == '__main__':
    main()
